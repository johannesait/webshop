@model IEnumerable<WebApplication3.Models.OrderedProductListModel>

<h2>Tellitud tooted</h2>
<hr />

@if (Model == null || Model.Count() == 0)
{
    <div class="row">
        <div class="col-lg-12">
            <div class="bs-component">
                <div class="alert alert-dismissible alert-info">
                    Ühtegi toodet pole veel tellitud!
                </div>
                <div id="source-button" class="btn btn-primary btn-xs" style="display: none;">&lt; &gt;</div>
            </div>
        </div>
    </div>
}
else
{
    <div style="position:relative;">
        <div class="with-filter table-responsive col-md-12">
            <table id="ordered" class="table table-condensed table-hover product-list-table display">
                <thead>
                    <tr>
                        <th>Tootekood</th>
                        <th>Nimetus</th>
                        <th>Nimelisa</th>
                        <th>Ühik</th>
                        <th>Viimati tellitud</th>
                        <th>Kordi tellitud</th>
                        <th>Viimase tellimuse number</th>
                        <th>Lisa korvi</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.ActionLink(item.ProductCode, "Details", "Product", new { id = item.ProductId }, new { hidefocus = "hidefocus" }) </td>
                            <td>@item.Title</td>
                            <td>@item.AdditionalTitle</td>
                            <td>@Html.DisplayFor(model => item.Unit)</td>
                            <td>@Html.DisplayFor(model => item.DateLastOrdered) </td>
                            <td>@Html.DisplayFor(model => item.TimesOrdered) </td>
                            <td>@Html.ActionLink(item.LastOrderNumber, "Details", "Order", new { id = item.OrderId }, new { hidefocus = "hidefocus" }) </td>
                            <td>
                                <div class="input-group" style="width: 100px;">
                                    <input type="text" class="form-control input-sm product-amount" placeholder="0">
                                    <span class="input-group-btn">
                                        <button data-url="@Url.Action("AddProductToCart", "Product", new { id = item.ProductId} )" type="button" class="btn btn-default btn-sm add-to-cart">Lisa</button>
                                    </span>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="form-group col-md-4" id="alates" style="display:none;">
        <label class="control-label col-md-4">Alates:</label>
        <div class="input-group col-md-8">
            <input class="form-control date input-sm" id="Min" name="Min" type="text" value="">
            <span class="input-group-addon">
                <span class="fa fa-calendar"></span>
            </span>
        </div>
    </div>
    <div class="form-group col-md-4" id="kuni" style="display:none;">
        <label class="control-label col-md-4">Kuni:</label>
        <div class="input-group col-md-8">
            <input class="form-control date input-sm" id="Max" name="Max" type="text" value="">
            <span class="input-group-addon">
                <span class="fa fa-calendar"></span>
            </span>
        </div>
    </div>
}
<script type="text/javascript">

    $(document).ready(function () {
        var table = $('#ordered').DataTable({
            "scrollX": false
        });
        var tableHeader = $("#ordered_wrapper>.row>.col-sm-6");
        var tableSearch = $("#ordered_filter").parent();
        $(tableSearch).removeClass("col-sm-6").addClass("col-md-3");
        $(tableHeader).removeClass("col-sm-6").addClass("col-md-9 form-horizontal");
        $(".dataTables_length").addClass("col-md-3");
        $("#kuni").insertAfter(".dataTables_length").show();
        $("#alates").insertAfter(".dataTables_length").show();
        $('#Max, #Min').datetimepicker({
            format: 'DD.MM.YYYY'
        });

        $('#Min, #Max').on("dp.change", function () {
            table.draw();
        });


        /* Custom filtering function which will search data in column four between two values */
        $.fn.dataTable.ext.search.push(
            function (settings, data, dataIndex) {
                var min = $('#Min').val();
                var max = $('#Max').val();
                if (min != "") {
                    var splitMin = min.split(".");
                    var compareDateMin = new Date(splitMin[2], splitMin[1] - 1, splitMin[0]);
                }
                if (max != "") {
                    var splitMax = max.split(".");
                    var compareDateMax = new Date(splitMax[2], splitMax[1] - 1, splitMax[0]);
                }
                var date = data[4] || 0; // use data for the age column
                var onlyDate = date.split(" ")[0].split(".");
                var compareDate = new Date(onlyDate[2], onlyDate[1] - 1, onlyDate[0]);
                debugger;
                if ((compareDateMin == undefined && compareDateMax == undefined) ||
                     (compareDateMin == undefined && compareDate <= compareDateMax) ||
                     (compareDateMin <= compareDate && compareDateMax == undefined) ||
                     (compareDateMin <= compareDate && compareDate <= compareDateMax)) {
                    return true;
                }
                return false;
            }
        );
    });

</script>
